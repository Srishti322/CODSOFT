#TASK5
#CONTACT BOOK

import json

class ContactBook:
    def __init__(self, filename="contacts.json"):
        self.filename = filename
        self.contacts = self.load_contacts()

    def load_contacts(self):
        try:
            with open(self.filename, 'r') as file:
                contacts = json.load(file)
            return contacts
        except FileNotFoundError:
            return []

    def save_contacts(self):
        with open(self.filename, 'w') as file:
            json.dump(self.contacts, file, indent=2)

    def add_contact(self, name, phone, email):
        contact = {'Name': name, 'Phone': phone, 'Email': email}
        self.contacts.append(contact)
        self.save_contacts()
        print(f"Contact {name} added successfully!")

    def view_contacts(self):
        if not self.contacts:
            print("Contact book is empty.")
        else:
            for index, contact in enumerate(self.contacts, start=1):
                print(f"{index}. Name: {contact['Name']}, Phone: {contact['Phone']}, Email: {contact['Email']}")

    def search_contact(self, query):
        results = [contact for contact in self.contacts if query.lower() in contact['Name'].lower()]
        if not results:
            print("No matching contacts found.")
        else:
            for index, contact in enumerate(results, start=1):
                print(f"{index}. Name: {contact['Name']}, Phone: {contact['Phone']}, Email: {contact['Email']}")

    def update_contact(self, index, name, phone, email):
        if 0 < index <= len(self.contacts):
            self.contacts[index - 1] = {'Name': name, 'Phone': phone, 'Email': email}
            self.save_contacts()
            print(f"Contact updated successfully!")
        else:
            print("Invalid contact index.")

    def delete_contact(self, index):
        if 0 < index <= len(self.contacts):
            deleted_contact = self.contacts.pop(index - 1)
            self.save_contacts()
            print(f"Contact {deleted_contact['Name']} deleted successfully!")
        else:
            print("Invalid contact index.")


def main():
    contact_book = ContactBook()

    while True:
        print("\n--- Contact Book ---")
        print("1. Add Contact")
        print("2. View Contacts")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")

        choice = input("Enter your choice (1-6): ")

        if choice == '1':
            name = input("Enter name: ")
            phone = input("Enter phone number: ")
            email = input("Enter email address: ")
            contact_book.add_contact(name, phone, email)

        elif choice == '2':
            contact_book.view_contacts()

        elif choice == '3':
            query = input("Enter name to search: ")
            contact_book.search_contact(query)

        elif choice == '4':
            index = int(input("Enter the index of the contact to update: "))
            name = input("Enter new name: ")
            phone = input("Enter new phone number: ")
            email = input("Enter new email address: ")
            contact_book.update_contact(index, name, phone, email)

        elif choice == '5':
            index = int(input("Enter the index of the contact to delete: "))
            contact_book.delete_contact(index)

        elif choice == '6':
            print("Exiting the Contact Book. Goodbye!")
            break

        else:
            print("Invalid choice. Please enter a number between 1 and 6.")


if __name__ == "__main__":
    main()


